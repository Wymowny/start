/**
 * Hide visually
 */

@mixin visuallyhidden() {
	border: 0;
	clip: rect(0 0 0 0);
	height: 1px;
	margin: -1px;
	overflow: hidden;
	padding: 0;
	position: absolute;
	width: 1px;
}

@mixin visuallyhiddenReset() {
	clip: auto;
	height: auto;
	margin: 0;
	overflow: visible;
	position: static;
	width: auto;
}

@mixin visuallyhiddenFocusable() {
	@include visuallyhidden;

	&:focus,
	&:active {
		@include visuallyhiddenReset;
	}
}

/**
 * Contain floats with clearfix
 * http://nicolasgallagher.com/micro-clearfix-hack/
 */

@mixin clearfix() {
	*zoom: 1;

	&:before,
	&:after {
		content: " ";
		display: table;
	}

	&:after {
		clear: both;
	}
}

/**
 * Lists with layout purpose
 */

@mixin resetList() {
	list-style: none;
	margin: 0;
	padding: 0;
}

/**
 * Select dropdown element reset default appearance
 */

@mixin resetSelect() {
	appearance: none;
	background: none;
	box-shadow: none;
	border: none;
	width: 100%;
	border-radius: 0;
	display: block;
	cursor: pointer;

	&::-ms-expand {
		display: none;
	}
}

/**
 * Replace text
 */

@mixin replaceText() {
	display: block;
	overflow: hidden;
	text-indent: 100%;
	white-space: nowrap;
}

/**
 * Base Box Shadow
*/

@mixin baseBoxShadow($top: false) {
	@if $top == true {
		box-shadow: 0 pxToRem(-4px) pxToRem(4px) 0 rgba($s-colorTextDefault, 0.15);
	} @else {
		box-shadow: 0 pxToRem(4px) pxToRem(4px) 0 rgba($s-colorTextDefault, 0.15);
	}
}

@mixin resetBoxShadow() {
	box-shadow: none;
}

/**
 * Placeholder in input fields
 */

@mixin placeholder() {

	&::-webkit-input-placeholder {
		@content;
	}
	&:-moz-placeholder { // Firefox 18-
		@content;
	}
	&::-moz-placeholder { // Firefox 19+
		@content;
	}
	&:-ms-input-placeholder {
		@content;
	}
}

/**
 * Pseudo-elements
 */

@mixin pseudo($display: block, $pos: absolute, $content: ''){
	content: $content;
	display: $display;
	position: $pos;
}

/**
 * CSS Triangles
 */

@mixin css-triangle($color, $direction, $size: 6px, $position: absolute, $round: false){
	@include pseudo($pos: $position);
	width: 0;
	height: 0;
	@if $round {
		border-radius: 3px;
	}
	@if $direction == down {
		border-left: $size solid transparent;
		border-right: $size solid transparent;
		border-top: $size solid $color;
		margin-top: 0 - round( $size / 2.5 );
	} @else if $direction == up {
		border-left: $size solid transparent;
		border-right: $size solid transparent;
		border-bottom: $size solid $color;
		margin-bottom: 0 - round( $size / 2.5 );
	} @else if $direction == right {
		border-top: $size solid transparent;
		border-bottom: $size solid transparent;
		border-left: $size solid $color;
		margin-right: -$size;
	} @else if  $direction == left {
		border-top: $size solid transparent;
		border-bottom: $size solid transparent;
		border-right: $size solid $color;
		margin-left: -$size;
	}
}

/**
 * Truncate
 */

@mixin truncate($truncation-boundary) {
	max-width: $truncation-boundary;
	white-space: nowrap;
	overflow: hidden;
	text-overflow: ellipsis;
}

/**
 * Vendor prefixing
 */

@mixin prefix($property, $value, $vendors: webkit moz ms o, $default: true) {
	@if $vendors {
		@each $vendor in $vendors {
			#{"-" + $vendor + "-" + $property}: #{$value};
		}
	}
	@if $default {
		#{$property}: #{$value};
	}
}

/**
 * Centering in both directions
 */

@mixin center-vertically {
	position: absolute;
	top: 50%;
	left: 50%;
	@include prefix(transform, translate(-50%, -50%), 'webkit' 'ms');
}